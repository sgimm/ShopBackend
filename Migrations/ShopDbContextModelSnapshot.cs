// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ValkyraECommerce.DataBase;

namespace ValkyraECommerce.Migrations
{
    [DbContext(typeof(ShopDbContext))]
    partial class ShopDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ValkyraECommerce.DatabaseDto.Shop.BasketItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount");

                    b.Property<DateTime>("Created");

                    b.Property<int>("CustomerBasketId");

                    b.Property<int?>("ProductId");

                    b.Property<DateTime>("Updated");

                    b.HasKey("Id");

                    b.HasIndex("CustomerBasketId");

                    b.HasIndex("ProductId");

                    b.ToTable("BasketItems");
                });

            modelBuilder.Entity("ValkyraECommerce.DatabaseDto.Shop.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CountryCode");

                    b.Property<DateTime>("Created");

                    b.Property<string>("Name");

                    b.Property<DateTime>("Updated");

                    b.HasKey("Id");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("ValkyraECommerce.DatabaseDto.Shop.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created");

                    b.Property<string>("Name");

                    b.Property<DateTime>("Updated");

                    b.HasKey("Id");

                    b.ToTable("Currencies");
                });

            modelBuilder.Entity("ValkyraECommerce.DatabaseDto.Shop.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<int?>("LanguageId");

                    b.Property<string>("LastName");

                    b.Property<DateTime>("Updated");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("ValkyraECommerce.DatabaseDto.Shop.CustomerAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddressType");

                    b.Property<int?>("CountryId");

                    b.Property<DateTime>("Created");

                    b.Property<int>("CustomerId");

                    b.Property<string>("Street")
                        .IsRequired();

                    b.Property<DateTime>("Updated");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("CustomerId");

                    b.ToTable("CustomerAddresses");
                });

            modelBuilder.Entity("ValkyraECommerce.DatabaseDto.Shop.CustomerBasket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created");

                    b.Property<int?>("CustomerWebAccountId");

                    b.Property<decimal>("TotalGrossAmount");

                    b.Property<DateTime>("Updated");

                    b.HasKey("Id");

                    b.HasIndex("CustomerWebAccountId");

                    b.ToTable("CustomerBaskets");
                });

            modelBuilder.Entity("ValkyraECommerce.DatabaseDto.Shop.CustomerOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created");

                    b.Property<int>("CustomerId");

                    b.Property<DateTime>("Updated");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("CustomerOrders");
                });

            modelBuilder.Entity("ValkyraECommerce.DatabaseDto.Shop.CustomerWebAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created");

                    b.Property<int?>("CustomerId");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<DateTime>("Updated");

                    b.Property<bool>("Verified");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("WebAccounts");
                });

            modelBuilder.Entity("ValkyraECommerce.DatabaseDto.Shop.CustomerWebToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created");

                    b.Property<int>("CustomerWebAccountId");

                    b.Property<DateTime>("Expire");

                    b.Property<string>("Token");

                    b.Property<DateTime>("Updated");

                    b.HasKey("Id");

                    b.HasIndex("CustomerWebAccountId");

                    b.ToTable("CustomerWebTokens");
                });

            modelBuilder.Entity("ValkyraECommerce.DatabaseDto.Shop.CustomerWishList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created");

                    b.Property<int>("CustomerWebAccountId");

                    b.Property<string>("Name");

                    b.Property<DateTime>("Updated");

                    b.HasKey("Id");

                    b.HasIndex("CustomerWebAccountId");

                    b.ToTable("CustomerWishLists");
                });

            modelBuilder.Entity("ValkyraECommerce.DatabaseDto.Shop.EmailValidation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created");

                    b.Property<int>("CustomerWebAccountId");

                    b.Property<DateTime>("ExpiredDate");

                    b.Property<DateTime>("Updated");

                    b.Property<Guid>("ValidationId");

                    b.HasKey("Id");

                    b.HasIndex("CustomerWebAccountId");

                    b.ToTable("EmailValidations");
                });

            modelBuilder.Entity("ValkyraECommerce.DatabaseDto.Shop.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created");

                    b.Property<string>("Name");

                    b.Property<DateTime>("Updated");

                    b.HasKey("Id");

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("ValkyraECommerce.DatabaseDto.Shop.Price", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CountryId");

                    b.Property<DateTime>("Created");

                    b.Property<int?>("CurrencyId");

                    b.Property<decimal>("GrossAmount");

                    b.Property<decimal>("NetAmout");

                    b.Property<DateTime>("Updated");

                    b.Property<decimal>("VatPercent");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("CurrencyId");

                    b.ToTable("Prices");
                });

            modelBuilder.Entity("ValkyraECommerce.DatabaseDto.Shop.ProcuctDescription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created");

                    b.Property<string>("Description");

                    b.Property<int?>("LanguageId");

                    b.Property<DateTime>("Updated");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.ToTable("ProcuctDescription");
                });

            modelBuilder.Entity("ValkyraECommerce.DatabaseDto.Shop.ShopProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Brand");

                    b.Property<string>("Company");

                    b.Property<DateTime>("Created");

                    b.Property<string>("EAN");

                    b.Property<string>("ImageUrl");

                    b.Property<string>("Name");

                    b.Property<int?>("PriceId");

                    b.Property<int?>("ProcuctDescriptionId");

                    b.Property<string>("ProductNumber");

                    b.Property<DateTime>("Updated");

                    b.HasKey("Id");

                    b.HasIndex("PriceId");

                    b.HasIndex("ProcuctDescriptionId");

                    b.ToTable("ShopProducts");
                });

            modelBuilder.Entity("ValkyraECommerce.DatabaseDto.Shop.ShopUILanguageItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CountryId");

                    b.Property<DateTime>("Created");

                    b.Property<string>("CtrlName");

                    b.Property<string>("Description");

                    b.Property<DateTime>("Updated");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("ShopUILanguageItems");
                });

            modelBuilder.Entity("ValkyraECommerce.DatabaseDto.Shop.WishListItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created");

                    b.Property<int?>("CustomerWishListId");

                    b.Property<int?>("ShopProductId");

                    b.Property<DateTime>("Updated");

                    b.HasKey("Id");

                    b.HasIndex("CustomerWishListId");

                    b.HasIndex("ShopProductId");

                    b.ToTable("WishListItem");
                });

            modelBuilder.Entity("ValkyraECommerce.DatabaseDto.Shop.BasketItem", b =>
                {
                    b.HasOne("ValkyraECommerce.DatabaseDto.Shop.CustomerBasket", "CustomerBasket")
                        .WithMany("BasketItems")
                        .HasForeignKey("CustomerBasketId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ValkyraECommerce.DatabaseDto.Shop.ShopProduct", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");
                });

            modelBuilder.Entity("ValkyraECommerce.DatabaseDto.Shop.Customer", b =>
                {
                    b.HasOne("ValkyraECommerce.DatabaseDto.Shop.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId");
                });

            modelBuilder.Entity("ValkyraECommerce.DatabaseDto.Shop.CustomerAddress", b =>
                {
                    b.HasOne("ValkyraECommerce.DatabaseDto.Shop.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.HasOne("ValkyraECommerce.DatabaseDto.Shop.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ValkyraECommerce.DatabaseDto.Shop.CustomerBasket", b =>
                {
                    b.HasOne("ValkyraECommerce.DatabaseDto.Shop.CustomerWebAccount", "CustomerWebAccount")
                        .WithMany()
                        .HasForeignKey("CustomerWebAccountId");
                });

            modelBuilder.Entity("ValkyraECommerce.DatabaseDto.Shop.CustomerOrder", b =>
                {
                    b.HasOne("ValkyraECommerce.DatabaseDto.Shop.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ValkyraECommerce.DatabaseDto.Shop.CustomerWebAccount", b =>
                {
                    b.HasOne("ValkyraECommerce.DatabaseDto.Shop.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");
                });

            modelBuilder.Entity("ValkyraECommerce.DatabaseDto.Shop.CustomerWebToken", b =>
                {
                    b.HasOne("ValkyraECommerce.DatabaseDto.Shop.CustomerWebAccount", "CustomerWebAccount")
                        .WithMany()
                        .HasForeignKey("CustomerWebAccountId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ValkyraECommerce.DatabaseDto.Shop.CustomerWishList", b =>
                {
                    b.HasOne("ValkyraECommerce.DatabaseDto.Shop.CustomerWebAccount", "CustomerWebAccount")
                        .WithMany()
                        .HasForeignKey("CustomerWebAccountId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ValkyraECommerce.DatabaseDto.Shop.EmailValidation", b =>
                {
                    b.HasOne("ValkyraECommerce.DatabaseDto.Shop.CustomerWebAccount", "CustomerWebAccount")
                        .WithMany()
                        .HasForeignKey("CustomerWebAccountId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ValkyraECommerce.DatabaseDto.Shop.Price", b =>
                {
                    b.HasOne("ValkyraECommerce.DatabaseDto.Shop.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.HasOne("ValkyraECommerce.DatabaseDto.Shop.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId");
                });

            modelBuilder.Entity("ValkyraECommerce.DatabaseDto.Shop.ProcuctDescription", b =>
                {
                    b.HasOne("ValkyraECommerce.DatabaseDto.Shop.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId");
                });

            modelBuilder.Entity("ValkyraECommerce.DatabaseDto.Shop.ShopProduct", b =>
                {
                    b.HasOne("ValkyraECommerce.DatabaseDto.Shop.Price", "Price")
                        .WithMany()
                        .HasForeignKey("PriceId");

                    b.HasOne("ValkyraECommerce.DatabaseDto.Shop.ProcuctDescription", "ProcuctDescription")
                        .WithMany()
                        .HasForeignKey("ProcuctDescriptionId");
                });

            modelBuilder.Entity("ValkyraECommerce.DatabaseDto.Shop.ShopUILanguageItem", b =>
                {
                    b.HasOne("ValkyraECommerce.DatabaseDto.Shop.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");
                });

            modelBuilder.Entity("ValkyraECommerce.DatabaseDto.Shop.WishListItem", b =>
                {
                    b.HasOne("ValkyraECommerce.DatabaseDto.Shop.CustomerWishList")
                        .WithMany("WishListItems")
                        .HasForeignKey("CustomerWishListId");

                    b.HasOne("ValkyraECommerce.DatabaseDto.Shop.ShopProduct", "ShopProduct")
                        .WithMany()
                        .HasForeignKey("ShopProductId");
                });
#pragma warning restore 612, 618
        }
    }
}
